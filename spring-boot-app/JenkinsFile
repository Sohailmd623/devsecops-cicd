pipeline {
  agent any

  environment {
    SONAR_URL = "http://34.192.31.132:9000"
    DOCKER_IMAGE = "thecodeguy/spring-boot-app:${BUILD_NUMBER}"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "Sohailmd623"
  }

  triggers {
    githubPush()
  }

  stages {
    stage('Checkout') {
      steps {
        echo "Simulating Git checkout..."
        // git branch: 'main', url: 'https://github.com/Sohailmd623/devsecops-cicd.git'
      }
    }

    stage('Build and Test') {
  steps {
    sh '''
      echo "[INFO] Building inside Docker container..."
      docker run --rm -u root \
        -v $(pwd):/app -w /app/spring-boot-app \
        thecodeguy/spring-boot-app:java17-v2 \
        sh -c "chmod -R u+w target || true && rm -rf target || true && mvn clean package"
    '''
  }
}


    stage('Java Version') {
      steps {
        sh 'java -version && javac -version'
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            docker run --rm -u root \
              -v $(pwd):/app -w /app/spring-boot-app \
              thecodeguy/spring-boot-app:java17-v2 \
              sh -c "mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}"
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', passwordVariable: 'DOCKER_PASS', usernameVariable: 'DOCKER_USER')]) {
          sh '''
            cd spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push ${DOCKER_IMAGE}
            docker logout
          '''
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "sohailmd1920@gmail.com"
            git config user.name "MD Sohail"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
            git add spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
